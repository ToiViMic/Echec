/*********************************/
/*      détection des echecs     */
/*********************************/



/* Ici, le programme va gérer quand la partie est en "Echec", soit quand une pièce peut se déplacer sur le Roi de l'autre couleur.
	 * Il y a une partie détection detectEchec et une partie deplacementEchec qui test si le déplacement du Roi est possible
	 */
	public boolean detectEchec(char coul)
	{
		Piece roi = new Roi(0, 0, coul);
		
		//parcours de l'ensemble des pièces pour trouver le roi d'une couleur
		for (Piece p : ensPiece)
		{
			if (p.getCouleur() == coul && p.getType() == 'K')
			{
				roi.setLig(p.getLig());
				roi.setCol(p.getCol());
			}
		}

		//parcours l'ensemble de pièces pour savoir si une d'entre elle peut se déplacer sur le roi (échec)
		for (Piece p : ensPiece)
		{
			if ( p.getCouleur() != roi.getCouleur() && p.peutDeplacer(roi.getLig(), roi.getCol(), this.ensPiece) )
				return true;
		}

		return false;
	}

	public boolean deplacementEchec(int ligArr, int colArr, Piece roi)
	{
		char couleurJoueur = roi.getCouleur();
		int ligDep = roi.getLig();
		int colDep = roi.getCol();

		// Vérification si le déplacement du Roi est valide
		if (roi.peutDeplacer(ligArr, colArr, this.ensPiece)) 
		{
			// Simuler le déplacement du Roi
			char temp = plateau[ligArr][colArr];
			plateau[ligArr][colArr] = plateau[ligDep][colDep];
			plateau[ligDep][colDep] = ' ';

			// Vérifier si le Roi est en échec après le déplacement
			if (!detectEchec(couleurJoueur)) 
			{
				// Le Roi peut se déplacer en toute sécurité
				roi.deplacer(ligArr, colArr);
				changerTour();
				return true;
			} 
			else 
			{
				// Annuler le déplacement si le Roi est en échec
				System.out.println("Le Roi ne peut pas se déplacer ici");
				plateau[ligDep][colDep] = plateau[ligArr][colArr];
				plateau[ligArr][colArr] = temp;
			}
		}

		return false; // Le déplacement du Roi n'est pas autorisé
	}


	/*
		//Si le joueur est en echec
		if ( this.detectEchec(this.couleurTour) )
		{
			if (p.getType() == 'K')
				return this.deplacementEchec(ligArr, colArr, p);
			else
			{
				System.out.println("Vous êtes en echec !");
				return false;
			}
		}*/


		